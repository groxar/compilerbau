Terminals unused in grammar

   COLON


State 125 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_element_list

    2 program_element_list: program_element_list program_element
    3                     | program_element

    4 program_element: variable_declaration SEMICOLON
    5                | function_declaration SEMICOLON
    6                | function_definition
    7                | SEMICOLON

    8 type: INT
    9     | VOID

   10 variable_declaration: variable_declaration COMMA identifier_declaration
   11                     | type identifier_declaration

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID

   14 function_definition: function_begin PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | function_begin function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE

   16 function_declaration: function_begin PARA_CLOSE
   17                     | function_begin function_parameter_list PARA_CLOSE

   18 function_begin: type ID PARA_OPEN

   19 function_parameter_list: function_parameter
   20                        | function_parameter_list COMMA function_parameter

   21 function_parameter: type identifier_declaration

   22 stmt_list: /* empty */
   23          | stmt_list stmt

   24 stmt: stmt_block
   25     | variable_declaration SEMICOLON
   26     | expression SEMICOLON
   27     | stmt_conditional
   28     | stmt_loop
   29     | RETURN expression SEMICOLON
   30     | RETURN SEMICOLON
   31     | SEMICOLON

   32 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   33 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

   35 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   37 expression: expression ASSIGN expression
   38           | expression LOGICAL_OR expression
   39           | expression LOGICAL_AND expression
   40           | LOGICAL_NOT expression
   41           | expression EQ expression
   42           | expression NE expression
   43           | expression LS expression
   44           | expression LSEQ expression
   45           | expression GTEQ expression
   46           | expression GT expression
   47           | expression PLUS expression
   48           | expression MINUS expression
   49           | expression SHIFT_LEFT expression
   50           | expression SHIFT_RIGHT expression
   51           | expression MUL expression
   52           | expression MOD expression
   53           | expression DIV expression
   54           | MINUS expression
   55           | PLUS expression
   56           | ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | PARA_OPEN expression PARA_CLOSE
   58           | function_call
   59           | primary

   60 primary: NUM
   61        | ID

   62 function_call: ID PARA_OPEN PARA_CLOSE
   63              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   64 function_call_parameters: function_call_parameters COMMA expression
   65                         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258) 36
WHILE (259) 35 36
IF (260) 33 34
ELSE (261) 34
INT (262) 8
VOID (263) 9
RETURN (264) 29 30
COLON (265)
COMMA (266) 10 20 64
SEMICOLON (267) 4 5 7 25 26 29 30 31 36
BRACE_OPEN (268) 14 15 32
BRACE_CLOSE (269) 14 15 32
BRACKET_OPEN (270) 12 56
BRACKET_CLOSE (271) 12 56
PARA_OPEN (272) 18 33 34 35 36 57 62 63
PARA_CLOSE (273) 14 15 16 17 33 34 35 36 57 62 63
ID (274) 12 13 18 56 61 62 63
NUM (275) 12 60
ASSIGN (276) 37
LOGICAL_OR (277) 38
LOGICAL_AND (278) 39
EQ (279) 41
NE (280) 42
LS (281) 43
LSEQ (282) 44
GTEQ (283) 45
GT (284) 46
SHIFT_LEFT (285) 49
SHIFT_RIGHT (286) 50
PLUS (287) 47 55
MINUS (288) 48 54
MUL (289) 51
DIV (290) 53
MOD (291) 52
LOGICAL_NOT (292) 40
UNARY_MINUS (293)
UNARY_PLUS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
program_element_list (42)
    on left: 2 3, on right: 1 2
program_element (43)
    on left: 4 5 6 7, on right: 2 3
type (44)
    on left: 8 9, on right: 11 18 21
variable_declaration (45)
    on left: 10 11, on right: 4 10 25
identifier_declaration (46)
    on left: 12 13, on right: 10 11 21
function_definition (47)
    on left: 14 15, on right: 6
function_declaration (48)
    on left: 16 17, on right: 5
function_begin (49)
    on left: 18, on right: 14 15 16 17
function_parameter_list (50)
    on left: 19 20, on right: 15 17 20
function_parameter (51)
    on left: 21, on right: 19 20
stmt_list (52)
    on left: 22 23, on right: 14 15 23 32
stmt (53)
    on left: 24 25 26 27 28 29 30 31, on right: 23 33 34 35 36
stmt_block (54)
    on left: 32, on right: 24
stmt_conditional (55)
    on left: 33 34, on right: 27
stmt_loop (56)
    on left: 35 36, on right: 28
expression (57)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59, on right: 26 29 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 54 55 57 64 65
primary (58)
    on left: 60 61, on right: 56 59
function_call (59)
    on left: 62 63, on right: 58
function_call_parameters (60)
    on left: 64 65, on right: 63 64


state 0

    0 $accept: . program $end
    1 program: . program_element_list
    2 program_element_list: . program_element_list program_element
    3                     | . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . function_begin PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . function_begin function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . function_begin PARA_CLOSE
   17                     | . function_begin function_parameter_list PARA_CLOSE
   18 function_begin: . type ID PARA_OPEN

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    program               go to state 4
    program_element_list  go to state 5
    program_element       go to state 6
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10
    function_begin        go to state 11


state 1

    8 type: INT .

    $default  reduce using rule 8 (type)


state 2

    9 type: VOID .

    $default  reduce using rule 9 (type)


state 3

    7 program_element: SEMICOLON .

    $default  reduce using rule 7 (program_element)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    1 program: program_element_list .  [$end]
    2 program_element_list: program_element_list . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . function_begin PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . function_begin function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . function_begin PARA_CLOSE
   17                     | . function_begin function_parameter_list PARA_CLOSE
   18 function_begin: . type ID PARA_OPEN

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    $default  reduce using rule 1 (program)

    program_element       go to state 13
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10
    function_begin        go to state 11


state 6

    3 program_element_list: program_element .

    $default  reduce using rule 3 (program_element_list)


state 7

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   18 function_begin: type . ID PARA_OPEN

    ID  shift, and go to state 14

    identifier_declaration  go to state 15


state 8

    4 program_element: variable_declaration . SEMICOLON
   10 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


state 9

    6 program_element: function_definition .

    $default  reduce using rule 6 (program_element)


state 10

    5 program_element: function_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


state 11

    8 type: . INT
    9     | . VOID
   14 function_definition: function_begin . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | function_begin . function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: function_begin . PARA_CLOSE
   17                     | function_begin . function_parameter_list PARA_CLOSE
   19 function_parameter_list: . function_parameter
   20                        | . function_parameter_list COMMA function_parameter
   21 function_parameter: . type identifier_declaration

    INT         shift, and go to state 1
    VOID        shift, and go to state 2
    PARA_CLOSE  shift, and go to state 19

    type                     go to state 20
    function_parameter_list  go to state 21
    function_parameter       go to state 22


state 12

    0 $accept: program $end .

    $default  accept


state 13

    2 program_element_list: program_element_list program_element .

    $default  reduce using rule 2 (program_element_list)


state 14

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON]
   18 function_begin: type ID . PARA_OPEN

    BRACKET_OPEN  shift, and go to state 23
    PARA_OPEN     shift, and go to state 24

    $default  reduce using rule 13 (identifier_declaration)


state 15

   11 variable_declaration: type identifier_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 16

   10 variable_declaration: variable_declaration COMMA . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 25

    identifier_declaration  go to state 26


state 17

    4 program_element: variable_declaration SEMICOLON .

    $default  reduce using rule 4 (program_element)


state 18

    5 program_element: function_declaration SEMICOLON .

    $default  reduce using rule 5 (program_element)


state 19

   14 function_definition: function_begin PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: function_begin PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 27

    $default  reduce using rule 16 (function_declaration)


state 20

   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   21 function_parameter: type . identifier_declaration

    ID  shift, and go to state 25

    identifier_declaration  go to state 28


state 21

   15 function_definition: function_begin function_parameter_list . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: function_begin function_parameter_list . PARA_CLOSE
   20 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       shift, and go to state 29
    PARA_CLOSE  shift, and go to state 30


state 22

   19 function_parameter_list: function_parameter .

    $default  reduce using rule 19 (function_parameter_list)


state 23

   12 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  shift, and go to state 31


state 24

   18 function_begin: type ID PARA_OPEN .

    $default  reduce using rule 18 (function_begin)


state 25

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  shift, and go to state 23

    $default  reduce using rule 13 (identifier_declaration)


state 26

   10 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduce using rule 10 (variable_declaration)


state 27

   14 function_definition: function_begin PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   22 stmt_list: .
   23          | . stmt_list stmt

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 32


state 28

   21 function_parameter: type identifier_declaration .

    $default  reduce using rule 21 (function_parameter)


state 29

    8 type: . INT
    9     | . VOID
   20 function_parameter_list: function_parameter_list COMMA . function_parameter
   21 function_parameter: . type identifier_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type                go to state 20
    function_parameter  go to state 33


state 30

   15 function_definition: function_begin function_parameter_list PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: function_begin function_parameter_list PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 34

    $default  reduce using rule 17 (function_declaration)


state 31

   12 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 35


state 32

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: function_begin PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    BRACE_CLOSE  shift, and go to state 42
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 33

   20 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduce using rule 20 (function_parameter_list)


state 34

   15 function_definition: function_begin function_parameter_list PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   22 stmt_list: .
   23          | . stmt_list stmt

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 58


state 35

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduce using rule 12 (identifier_declaration)


state 36

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36          | DO . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 59
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 37

   35 stmt_loop: WHILE . PARA_OPEN expression PARA_CLOSE stmt

    PARA_OPEN  shift, and go to state 60


state 38

   33 stmt_conditional: IF . PARA_OPEN expression PARA_CLOSE stmt
   34                 | IF . PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

    PARA_OPEN  shift, and go to state 61


state 39

   29 stmt: RETURN . expression SEMICOLON
   30     | RETURN . SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    shift, and go to state 62
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 63
    primary        go to state 56
    function_call  go to state 57


state 40

   31 stmt: SEMICOLON .

    $default  reduce using rule 31 (stmt)


state 41

   22 stmt_list: .
   23          | . stmt_list stmt
   32 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 64


state 42

   14 function_definition: function_begin PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 14 (function_definition)


state 43

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   57           | PARA_OPEN . expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 65
    primary        go to state 56
    function_call  go to state 57


state 44

   56 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   61 primary: ID .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   62 function_call: ID . PARA_OPEN PARA_CLOSE
   63              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    BRACKET_OPEN  shift, and go to state 66
    PARA_OPEN     shift, and go to state 67

    $default  reduce using rule 61 (primary)


state 45

   60 primary: NUM .

    $default  reduce using rule 60 (primary)


state 46

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   55           | PLUS . expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 68
    primary        go to state 56
    function_call  go to state 57


state 47

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   54           | MINUS . expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 69
    primary        go to state 56
    function_call  go to state 57


state 48

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   40           | LOGICAL_NOT . expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 70
    primary        go to state 56
    function_call  go to state 57


state 49

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 25

    identifier_declaration  go to state 15


state 50

   10 variable_declaration: variable_declaration . COMMA identifier_declaration
   25 stmt: variable_declaration . SEMICOLON

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 71


state 51

   23 stmt_list: stmt_list stmt .

    $default  reduce using rule 23 (stmt_list)


state 52

   24 stmt: stmt_block .

    $default  reduce using rule 24 (stmt)


state 53

   27 stmt: stmt_conditional .

    $default  reduce using rule 27 (stmt)


state 54

   28 stmt: stmt_loop .

    $default  reduce using rule 28 (stmt)


state 55

   26 stmt: expression . SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SEMICOLON    shift, and go to state 72
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 56

   59 expression: primary .

    $default  reduce using rule 59 (expression)


state 57

   58 expression: function_call .

    $default  reduce using rule 58 (expression)


state 58

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: function_begin function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    BRACE_CLOSE  shift, and go to state 89
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 59

   36 stmt_loop: DO stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  shift, and go to state 90


state 60

   35 stmt_loop: WHILE PARA_OPEN . expression PARA_CLOSE stmt
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 91
    primary        go to state 56
    function_call  go to state 57


state 61

   33 stmt_conditional: IF PARA_OPEN . expression PARA_CLOSE stmt
   34                 | IF PARA_OPEN . expression PARA_CLOSE stmt ELSE stmt
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 92
    primary        go to state 56
    function_call  go to state 57


state 62

   30 stmt: RETURN SEMICOLON .

    $default  reduce using rule 30 (stmt)


state 63

   29 stmt: RETURN expression . SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SEMICOLON    shift, and go to state 93
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 64

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt_list: stmt_list . stmt
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32           | BRACE_OPEN stmt_list . BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    BRACE_CLOSE  shift, and go to state 94
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 65

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   57           | PARA_OPEN expression . PARA_CLOSE

    PARA_CLOSE   shift, and go to state 95
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 66

   56 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   60 primary: . NUM
   61        | . ID

    ID   shift, and go to state 96
    NUM  shift, and go to state 45

    primary  go to state 97


state 67

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   62              | ID PARA_OPEN . PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   63              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   64 function_call_parameters: . function_call_parameters COMMA expression
   65                         | . expression

    PARA_OPEN    shift, and go to state 43
    PARA_CLOSE   shift, and go to state 98
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression                go to state 99
    primary                   go to state 56
    function_call             go to state 57
    function_call_parameters  go to state 100


state 68

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   55           | PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < UNARY_PLUS).
    Conflict between rule 55 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_PLUS).
    Conflict between rule 55 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_PLUS).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < UNARY_PLUS).
    Conflict between rule 55 and token NE resolved as reduce (NE < UNARY_PLUS).
    Conflict between rule 55 and token LS resolved as reduce (LS < UNARY_PLUS).
    Conflict between rule 55 and token LSEQ resolved as reduce (LSEQ < UNARY_PLUS).
    Conflict between rule 55 and token GTEQ resolved as reduce (GTEQ < UNARY_PLUS).
    Conflict between rule 55 and token GT resolved as reduce (GT < UNARY_PLUS).
    Conflict between rule 55 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_PLUS).
    Conflict between rule 55 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_PLUS).
    Conflict between rule 55 and token PLUS resolved as reduce (PLUS < UNARY_PLUS).
    Conflict between rule 55 and token MINUS resolved as reduce (MINUS < UNARY_PLUS).
    Conflict between rule 55 and token MUL resolved as reduce (MUL < UNARY_PLUS).
    Conflict between rule 55 and token DIV resolved as reduce (DIV < UNARY_PLUS).
    Conflict between rule 55 and token MOD resolved as reduce (MOD < UNARY_PLUS).


state 69

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   54           | MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < UNARY_MINUS).
    Conflict between rule 54 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_MINUS).
    Conflict between rule 54 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_MINUS).
    Conflict between rule 54 and token EQ resolved as reduce (EQ < UNARY_MINUS).
    Conflict between rule 54 and token NE resolved as reduce (NE < UNARY_MINUS).
    Conflict between rule 54 and token LS resolved as reduce (LS < UNARY_MINUS).
    Conflict between rule 54 and token LSEQ resolved as reduce (LSEQ < UNARY_MINUS).
    Conflict between rule 54 and token GTEQ resolved as reduce (GTEQ < UNARY_MINUS).
    Conflict between rule 54 and token GT resolved as reduce (GT < UNARY_MINUS).
    Conflict between rule 54 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_MINUS).
    Conflict between rule 54 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_MINUS).
    Conflict between rule 54 and token PLUS resolved as reduce (PLUS < UNARY_MINUS).
    Conflict between rule 54 and token MINUS resolved as reduce (MINUS < UNARY_MINUS).
    Conflict between rule 54 and token MUL resolved as reduce (MUL < UNARY_MINUS).
    Conflict between rule 54 and token DIV resolved as reduce (DIV < UNARY_MINUS).
    Conflict between rule 54 and token MOD resolved as reduce (MOD < UNARY_MINUS).


state 70

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   40           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_NOT).
    Conflict between rule 40 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_NOT).
    Conflict between rule 40 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LOGICAL_NOT).
    Conflict between rule 40 and token EQ resolved as reduce (EQ < LOGICAL_NOT).
    Conflict between rule 40 and token NE resolved as reduce (NE < LOGICAL_NOT).
    Conflict between rule 40 and token LS resolved as reduce (LS < LOGICAL_NOT).
    Conflict between rule 40 and token LSEQ resolved as reduce (LSEQ < LOGICAL_NOT).
    Conflict between rule 40 and token GTEQ resolved as reduce (GTEQ < LOGICAL_NOT).
    Conflict between rule 40 and token GT resolved as reduce (GT < LOGICAL_NOT).
    Conflict between rule 40 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < LOGICAL_NOT).
    Conflict between rule 40 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < LOGICAL_NOT).
    Conflict between rule 40 and token PLUS resolved as reduce (PLUS < LOGICAL_NOT).
    Conflict between rule 40 and token MINUS resolved as reduce (MINUS < LOGICAL_NOT).
    Conflict between rule 40 and token MUL resolved as reduce (MUL < LOGICAL_NOT).
    Conflict between rule 40 and token DIV resolved as reduce (DIV < LOGICAL_NOT).
    Conflict between rule 40 and token MOD resolved as reduce (MOD < LOGICAL_NOT).


state 71

   25 stmt: variable_declaration SEMICOLON .

    $default  reduce using rule 25 (stmt)


state 72

   26 stmt: expression SEMICOLON .

    $default  reduce using rule 26 (stmt)


state 73

   37 expression: . expression ASSIGN expression
   37           | expression ASSIGN . expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 101
    primary        go to state 56
    function_call  go to state 57


state 74

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   38           | expression LOGICAL_OR . expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 102
    primary        go to state 56
    function_call  go to state 57


state 75

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   39           | expression LOGICAL_AND . expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 103
    primary        go to state 56
    function_call  go to state 57


state 76

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   41           | expression EQ . expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 104
    primary        go to state 56
    function_call  go to state 57


state 77

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   42           | expression NE . expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 105
    primary        go to state 56
    function_call  go to state 57


state 78

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   43           | expression LS . expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 106
    primary        go to state 56
    function_call  go to state 57


state 79

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   44           | expression LSEQ . expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 107
    primary        go to state 56
    function_call  go to state 57


state 80

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   45           | expression GTEQ . expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 108
    primary        go to state 56
    function_call  go to state 57


state 81

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   46           | expression GT . expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 109
    primary        go to state 56
    function_call  go to state 57


state 82

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   49           | expression SHIFT_LEFT . expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 110
    primary        go to state 56
    function_call  go to state 57


state 83

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   50           | expression SHIFT_RIGHT . expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 111
    primary        go to state 56
    function_call  go to state 57


state 84

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   47           | expression PLUS . expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 112
    primary        go to state 56
    function_call  go to state 57


state 85

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   48           | expression MINUS . expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 113
    primary        go to state 56
    function_call  go to state 57


state 86

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   51           | expression MUL . expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 114
    primary        go to state 56
    function_call  go to state 57


state 87

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   53           | expression DIV . expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 115
    primary        go to state 56
    function_call  go to state 57


state 88

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   52           | expression MOD . expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 116
    primary        go to state 56
    function_call  go to state 57


state 89

   15 function_definition: function_begin function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 15 (function_definition)


state 90

   36 stmt_loop: DO stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  shift, and go to state 117


state 91

   35 stmt_loop: WHILE PARA_OPEN expression . PARA_CLOSE stmt
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 118
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 92

   33 stmt_conditional: IF PARA_OPEN expression . PARA_CLOSE stmt
   34                 | IF PARA_OPEN expression . PARA_CLOSE stmt ELSE stmt
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 119
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 93

   29 stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 29 (stmt)


state 94

   32 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 32 (stmt_block)


state 95

   57 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduce using rule 57 (expression)


state 96

   61 primary: ID .

    $default  reduce using rule 61 (primary)


state 97

   56 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 120


state 98

   62 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduce using rule 62 (function_call)


state 99

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   65 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 65 (function_call_parameters)


state 100

   63 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   64 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       shift, and go to state 121
    PARA_CLOSE  shift, and go to state 122


state 101

   37 expression: expression . ASSIGN expression
   37           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 37 and token LOGICAL_OR resolved as shift (ASSIGN < LOGICAL_OR).
    Conflict between rule 37 and token LOGICAL_AND resolved as shift (ASSIGN < LOGICAL_AND).
    Conflict between rule 37 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 37 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 37 and token LS resolved as shift (ASSIGN < LS).
    Conflict between rule 37 and token LSEQ resolved as shift (ASSIGN < LSEQ).
    Conflict between rule 37 and token GTEQ resolved as shift (ASSIGN < GTEQ).
    Conflict between rule 37 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 37 and token SHIFT_LEFT resolved as shift (ASSIGN < SHIFT_LEFT).
    Conflict between rule 37 and token SHIFT_RIGHT resolved as shift (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 37 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 37 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 37 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 37 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 37 and token MOD resolved as shift (ASSIGN < MOD).


state 102

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   38           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR]
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_OR).
    Conflict between rule 38 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 38 and token LOGICAL_AND resolved as shift (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 38 and token EQ resolved as shift (LOGICAL_OR < EQ).
    Conflict between rule 38 and token NE resolved as shift (LOGICAL_OR < NE).
    Conflict between rule 38 and token LS resolved as shift (LOGICAL_OR < LS).
    Conflict between rule 38 and token LSEQ resolved as shift (LOGICAL_OR < LSEQ).
    Conflict between rule 38 and token GTEQ resolved as shift (LOGICAL_OR < GTEQ).
    Conflict between rule 38 and token GT resolved as shift (LOGICAL_OR < GT).
    Conflict between rule 38 and token SHIFT_LEFT resolved as shift (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 38 and token SHIFT_RIGHT resolved as shift (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 38 and token PLUS resolved as shift (LOGICAL_OR < PLUS).
    Conflict between rule 38 and token MINUS resolved as shift (LOGICAL_OR < MINUS).
    Conflict between rule 38 and token MUL resolved as shift (LOGICAL_OR < MUL).
    Conflict between rule 38 and token DIV resolved as shift (LOGICAL_OR < DIV).
    Conflict between rule 38 and token MOD resolved as shift (LOGICAL_OR < MOD).


state 103

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   39           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND]
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_AND).
    Conflict between rule 39 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 39 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 39 and token EQ resolved as shift (LOGICAL_AND < EQ).
    Conflict between rule 39 and token NE resolved as shift (LOGICAL_AND < NE).
    Conflict between rule 39 and token LS resolved as shift (LOGICAL_AND < LS).
    Conflict between rule 39 and token LSEQ resolved as shift (LOGICAL_AND < LSEQ).
    Conflict between rule 39 and token GTEQ resolved as shift (LOGICAL_AND < GTEQ).
    Conflict between rule 39 and token GT resolved as shift (LOGICAL_AND < GT).
    Conflict between rule 39 and token SHIFT_LEFT resolved as shift (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 39 and token SHIFT_RIGHT resolved as shift (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 39 and token PLUS resolved as shift (LOGICAL_AND < PLUS).
    Conflict between rule 39 and token MINUS resolved as shift (LOGICAL_AND < MINUS).
    Conflict between rule 39 and token MUL resolved as shift (LOGICAL_AND < MUL).
    Conflict between rule 39 and token DIV resolved as shift (LOGICAL_AND < DIV).
    Conflict between rule 39 and token MOD resolved as shift (LOGICAL_AND < MOD).


state 104

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   41           | expression EQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 41 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < EQ).
    Conflict between rule 41 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < EQ).
    Conflict between rule 41 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 41 and token NE resolved as reduce (%left NE).
    Conflict between rule 41 and token LS resolved as shift (EQ < LS).
    Conflict between rule 41 and token LSEQ resolved as shift (EQ < LSEQ).
    Conflict between rule 41 and token GTEQ resolved as shift (EQ < GTEQ).
    Conflict between rule 41 and token GT resolved as shift (EQ < GT).
    Conflict between rule 41 and token SHIFT_LEFT resolved as shift (EQ < SHIFT_LEFT).
    Conflict between rule 41 and token SHIFT_RIGHT resolved as shift (EQ < SHIFT_RIGHT).
    Conflict between rule 41 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 41 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 41 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 41 and token MOD resolved as shift (EQ < MOD).


state 105

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   42           | expression NE expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 42 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < NE).
    Conflict between rule 42 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < NE).
    Conflict between rule 42 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 42 and token NE resolved as reduce (%left NE).
    Conflict between rule 42 and token LS resolved as shift (NE < LS).
    Conflict between rule 42 and token LSEQ resolved as shift (NE < LSEQ).
    Conflict between rule 42 and token GTEQ resolved as shift (NE < GTEQ).
    Conflict between rule 42 and token GT resolved as shift (NE < GT).
    Conflict between rule 42 and token SHIFT_LEFT resolved as shift (NE < SHIFT_LEFT).
    Conflict between rule 42 and token SHIFT_RIGHT resolved as shift (NE < SHIFT_RIGHT).
    Conflict between rule 42 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 42 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 42 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 42 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 42 and token MOD resolved as shift (NE < MOD).


state 106

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   43           | expression LS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token ASSIGN resolved as reduce (ASSIGN < LS).
    Conflict between rule 43 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LS).
    Conflict between rule 43 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LS).
    Conflict between rule 43 and token EQ resolved as reduce (EQ < LS).
    Conflict between rule 43 and token NE resolved as reduce (NE < LS).
    Conflict between rule 43 and token LS resolved as reduce (%left LS).
    Conflict between rule 43 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 43 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 43 and token GT resolved as reduce (%left GT).
    Conflict between rule 43 and token SHIFT_LEFT resolved as shift (LS < SHIFT_LEFT).
    Conflict between rule 43 and token SHIFT_RIGHT resolved as shift (LS < SHIFT_RIGHT).
    Conflict between rule 43 and token PLUS resolved as shift (LS < PLUS).
    Conflict between rule 43 and token MINUS resolved as shift (LS < MINUS).
    Conflict between rule 43 and token MUL resolved as shift (LS < MUL).
    Conflict between rule 43 and token DIV resolved as shift (LS < DIV).
    Conflict between rule 43 and token MOD resolved as shift (LS < MOD).


state 107

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   44           | expression LSEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < LSEQ).
    Conflict between rule 44 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LSEQ).
    Conflict between rule 44 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LSEQ).
    Conflict between rule 44 and token EQ resolved as reduce (EQ < LSEQ).
    Conflict between rule 44 and token NE resolved as reduce (NE < LSEQ).
    Conflict between rule 44 and token LS resolved as reduce (%left LS).
    Conflict between rule 44 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 44 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 44 and token GT resolved as reduce (%left GT).
    Conflict between rule 44 and token SHIFT_LEFT resolved as shift (LSEQ < SHIFT_LEFT).
    Conflict between rule 44 and token SHIFT_RIGHT resolved as shift (LSEQ < SHIFT_RIGHT).
    Conflict between rule 44 and token PLUS resolved as shift (LSEQ < PLUS).
    Conflict between rule 44 and token MINUS resolved as shift (LSEQ < MINUS).
    Conflict between rule 44 and token MUL resolved as shift (LSEQ < MUL).
    Conflict between rule 44 and token DIV resolved as shift (LSEQ < DIV).
    Conflict between rule 44 and token MOD resolved as shift (LSEQ < MOD).


state 108

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   45           | expression GTEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < GTEQ).
    Conflict between rule 45 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GTEQ).
    Conflict between rule 45 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GTEQ).
    Conflict between rule 45 and token EQ resolved as reduce (EQ < GTEQ).
    Conflict between rule 45 and token NE resolved as reduce (NE < GTEQ).
    Conflict between rule 45 and token LS resolved as reduce (%left LS).
    Conflict between rule 45 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 45 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 45 and token GT resolved as reduce (%left GT).
    Conflict between rule 45 and token SHIFT_LEFT resolved as shift (GTEQ < SHIFT_LEFT).
    Conflict between rule 45 and token SHIFT_RIGHT resolved as shift (GTEQ < SHIFT_RIGHT).
    Conflict between rule 45 and token PLUS resolved as shift (GTEQ < PLUS).
    Conflict between rule 45 and token MINUS resolved as shift (GTEQ < MINUS).
    Conflict between rule 45 and token MUL resolved as shift (GTEQ < MUL).
    Conflict between rule 45 and token DIV resolved as shift (GTEQ < DIV).
    Conflict between rule 45 and token MOD resolved as shift (GTEQ < MOD).


state 109

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   46           | expression GT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 46 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GT).
    Conflict between rule 46 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GT).
    Conflict between rule 46 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 46 and token NE resolved as reduce (NE < GT).
    Conflict between rule 46 and token LS resolved as reduce (%left LS).
    Conflict between rule 46 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 46 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 46 and token GT resolved as reduce (%left GT).
    Conflict between rule 46 and token SHIFT_LEFT resolved as shift (GT < SHIFT_LEFT).
    Conflict between rule 46 and token SHIFT_RIGHT resolved as shift (GT < SHIFT_RIGHT).
    Conflict between rule 46 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 46 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 46 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 46 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 46 and token MOD resolved as shift (GT < MOD).


state 110

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   49           | expression SHIFT_LEFT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_LEFT).
    Conflict between rule 49 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 49 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 49 and token EQ resolved as reduce (EQ < SHIFT_LEFT).
    Conflict between rule 49 and token NE resolved as reduce (NE < SHIFT_LEFT).
    Conflict between rule 49 and token LS resolved as reduce (LS < SHIFT_LEFT).
    Conflict between rule 49 and token LSEQ resolved as reduce (LSEQ < SHIFT_LEFT).
    Conflict between rule 49 and token GTEQ resolved as reduce (GTEQ < SHIFT_LEFT).
    Conflict between rule 49 and token GT resolved as reduce (GT < SHIFT_LEFT).
    Conflict between rule 49 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 49 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 49 and token PLUS resolved as shift (SHIFT_LEFT < PLUS).
    Conflict between rule 49 and token MINUS resolved as shift (SHIFT_LEFT < MINUS).
    Conflict between rule 49 and token MUL resolved as shift (SHIFT_LEFT < MUL).
    Conflict between rule 49 and token DIV resolved as shift (SHIFT_LEFT < DIV).
    Conflict between rule 49 and token MOD resolved as shift (SHIFT_LEFT < MOD).


state 111

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   50           | expression SHIFT_RIGHT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < SHIFT_RIGHT).
    Conflict between rule 50 and token NE resolved as reduce (NE < SHIFT_RIGHT).
    Conflict between rule 50 and token LS resolved as reduce (LS < SHIFT_RIGHT).
    Conflict between rule 50 and token LSEQ resolved as reduce (LSEQ < SHIFT_RIGHT).
    Conflict between rule 50 and token GTEQ resolved as reduce (GTEQ < SHIFT_RIGHT).
    Conflict between rule 50 and token GT resolved as reduce (GT < SHIFT_RIGHT).
    Conflict between rule 50 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 50 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 50 and token PLUS resolved as shift (SHIFT_RIGHT < PLUS).
    Conflict between rule 50 and token MINUS resolved as shift (SHIFT_RIGHT < MINUS).
    Conflict between rule 50 and token MUL resolved as shift (SHIFT_RIGHT < MUL).
    Conflict between rule 50 and token DIV resolved as shift (SHIFT_RIGHT < DIV).
    Conflict between rule 50 and token MOD resolved as shift (SHIFT_RIGHT < MOD).


state 112

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   47           | expression PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    MUL  shift, and go to state 86
    DIV  shift, and go to state 87
    MOD  shift, and go to state 88

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 47 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < PLUS).
    Conflict between rule 47 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < PLUS).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 47 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 47 and token LS resolved as reduce (LS < PLUS).
    Conflict between rule 47 and token LSEQ resolved as reduce (LSEQ < PLUS).
    Conflict between rule 47 and token GTEQ resolved as reduce (GTEQ < PLUS).
    Conflict between rule 47 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 47 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < PLUS).
    Conflict between rule 47 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < PLUS).
    Conflict between rule 47 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 47 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 47 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 47 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 47 and token MOD resolved as shift (PLUS < MOD).


state 113

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   48           | expression MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    MUL  shift, and go to state 86
    DIV  shift, and go to state 87
    MOD  shift, and go to state 88

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 48 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MINUS).
    Conflict between rule 48 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MINUS).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 48 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 48 and token LS resolved as reduce (LS < MINUS).
    Conflict between rule 48 and token LSEQ resolved as reduce (LSEQ < MINUS).
    Conflict between rule 48 and token GTEQ resolved as reduce (GTEQ < MINUS).
    Conflict between rule 48 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 48 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MINUS).
    Conflict between rule 48 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MINUS).
    Conflict between rule 48 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 48 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 48 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 48 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 48 and token MOD resolved as shift (MINUS < MOD).


state 114

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   51           | expression MUL expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   52           | expression . MOD expression
   53           | expression . DIV expression

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 51 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 51 and token LS resolved as reduce (LS < MUL).
    Conflict between rule 51 and token LSEQ resolved as reduce (LSEQ < MUL).
    Conflict between rule 51 and token GTEQ resolved as reduce (GTEQ < MUL).
    Conflict between rule 51 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 51 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MUL).
    Conflict between rule 51 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MUL).
    Conflict between rule 51 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 51 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 51 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 51 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 51 and token MOD resolved as reduce (%left MOD).


state 115

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   53           | expression DIV expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < DIV).
    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < DIV).
    Conflict between rule 53 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 53 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 53 and token LS resolved as reduce (LS < DIV).
    Conflict between rule 53 and token LSEQ resolved as reduce (LSEQ < DIV).
    Conflict between rule 53 and token GTEQ resolved as reduce (GTEQ < DIV).
    Conflict between rule 53 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 53 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < DIV).
    Conflict between rule 53 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < DIV).
    Conflict between rule 53 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 53 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 53 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 53 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 53 and token MOD resolved as reduce (%left MOD).


state 116

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   52           | expression MOD expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV, MOD]
   53           | expression . DIV expression

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MOD).
    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MOD).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 52 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 52 and token LS resolved as reduce (LS < MOD).
    Conflict between rule 52 and token LSEQ resolved as reduce (LSEQ < MOD).
    Conflict between rule 52 and token GTEQ resolved as reduce (GTEQ < MOD).
    Conflict between rule 52 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 52 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MOD).
    Conflict between rule 52 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MOD).
    Conflict between rule 52 and token PLUS resolved as reduce (PLUS < MOD).
    Conflict between rule 52 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 52 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 52 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 52 and token MOD resolved as reduce (%left MOD).


state 117

   36 stmt_loop: DO stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 123
    primary        go to state 56
    function_call  go to state 57


state 118

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | WHILE PARA_OPEN expression PARA_CLOSE . stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 124
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 119

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | IF PARA_OPEN expression PARA_CLOSE . stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE . stmt ELSE stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 125
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 120

   56 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduce using rule 56 (expression)


state 121

   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   64 function_call_parameters: function_call_parameters COMMA . expression

    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    expression     go to state 126
    primary        go to state 56
    function_call  go to state 57


state 122

   63 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduce using rule 63 (function_call)


state 123

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 127
    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88


state 124

   35 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt .

    $default  reduce using rule 35 (stmt_loop)


state 125

   33 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, PARA_OPEN, ID, NUM, PLUS, MINUS, LOGICAL_NOT]
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt . ELSE stmt

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 33 (stmt_conditional)]
    $default  reduce using rule 33 (stmt_conditional)


state 126

   37 expression: expression . ASSIGN expression
   38           | expression . LOGICAL_OR expression
   39           | expression . LOGICAL_AND expression
   41           | expression . EQ expression
   42           | expression . NE expression
   43           | expression . LS expression
   44           | expression . LSEQ expression
   45           | expression . GTEQ expression
   46           | expression . GT expression
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . SHIFT_LEFT expression
   50           | expression . SHIFT_RIGHT expression
   51           | expression . MUL expression
   52           | expression . MOD expression
   53           | expression . DIV expression
   64 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 73
    LOGICAL_OR   shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    EQ           shift, and go to state 76
    NE           shift, and go to state 77
    LS           shift, and go to state 78
    LSEQ         shift, and go to state 79
    GTEQ         shift, and go to state 80
    GT           shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    SHIFT_RIGHT  shift, and go to state 83
    PLUS         shift, and go to state 84
    MINUS        shift, and go to state 85
    MUL          shift, and go to state 86
    DIV          shift, and go to state 87
    MOD          shift, and go to state 88

    $default  reduce using rule 64 (function_call_parameters)


state 127

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 129


state 128

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt: . stmt_block
   25     | . variable_declaration SEMICOLON
   26     | . expression SEMICOLON
   27     | . stmt_conditional
   28     | . stmt_loop
   29     | . RETURN expression SEMICOLON
   30     | . RETURN SEMICOLON
   31     | . SEMICOLON
   32 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   34                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE . stmt
   35 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   36          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   37 expression: . expression ASSIGN expression
   38           | . expression LOGICAL_OR expression
   39           | . expression LOGICAL_AND expression
   40           | . LOGICAL_NOT expression
   41           | . expression EQ expression
   42           | . expression NE expression
   43           | . expression LS expression
   44           | . expression LSEQ expression
   45           | . expression GTEQ expression
   46           | . expression GT expression
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression SHIFT_LEFT expression
   50           | . expression SHIFT_RIGHT expression
   51           | . expression MUL expression
   52           | . expression MOD expression
   53           | . expression DIV expression
   54           | . MINUS expression
   55           | . PLUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 36
    WHILE        shift, and go to state 37
    IF           shift, and go to state 38
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 39
    SEMICOLON    shift, and go to state 40
    BRACE_OPEN   shift, and go to state 41
    PARA_OPEN    shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    PLUS         shift, and go to state 46
    MINUS        shift, and go to state 47
    LOGICAL_NOT  shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 130
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 129

   36 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduce using rule 36 (stmt_loop)


state 130

   34 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt .

    $default  reduce using rule 34 (stmt_conditional)
