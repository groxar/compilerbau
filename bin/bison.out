Terminals unused in grammar

   COLON
   MOD


State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_element_list

    2 program_element_list: program_element_list program_element
    3                     | program_element

    4 program_element: variable_declaration SEMICOLON
    5                | function_declaration SEMICOLON
    6                | function_definition
    7                | SEMICOLON

    8 type: INT
    9     | VOID

   10 variable_declaration: variable_declaration COMMA identifier_declaration
   11                     | type identifier_declaration

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE

   16 function_declaration: type ID PARA_OPEN PARA_CLOSE
   17                     | type ID PARA_OPEN function_parameter_list PARA_CLOSE

   18 function_parameter_list: function_parameter
   19                        | function_parameter_list COMMA function_parameter

   20 function_parameter: type identifier_declaration

   21 stmt_list: /* empty */
   22          | stmt_list stmt

   23 stmt: stmt_block
   24     | variable_declaration SEMICOLON
   25     | expression SEMICOLON
   26     | stmt_conditional
   27     | stmt_loop
   28     | RETURN expression SEMICOLON
   29     | RETURN SEMICOLON
   30     | SEMICOLON

   31 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   32 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

   34 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   36 expression: expression ASSIGN expression
   37           | expression LOGICAL_OR expression
   38           | expression LOGICAL_AND expression
   39           | LOGICAL_NOT expression
   40           | expression EQ expression
   41           | expression NE expression
   42           | expression LS expression
   43           | expression LSEQ expression
   44           | expression GTEQ expression
   45           | expression GT expression
   46           | expression PLUS expression
   47           | expression MINUS expression
   48           | expression SHIFT_LEFT expression
   49           | expression SHIFT_RIGHT expression
   50           | expression MUL expression
   51           | expression DIV expression
   52           | MINUS expression
   53           | PLUS expression
   54           | ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | PARA_OPEN expression PARA_CLOSE
   56           | function_call
   57           | primary

   58 primary: NUM
   59        | ID

   60 function_call: ID PARA_OPEN PARA_CLOSE
   61              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   62 function_call_parameters: function_call_parameters COMMA expression
   63                         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258) 35
WHILE (259) 34 35
IF (260) 32 33
ELSE (261) 33
INT (262) 8
VOID (263) 9
RETURN (264) 28 29
COLON (265)
COMMA (266) 10 19 62
SEMICOLON (267) 4 5 7 24 25 28 29 30 35
BRACE_OPEN (268) 14 15 31
BRACE_CLOSE (269) 14 15 31
BRACKET_OPEN (270) 12 54
BRACKET_CLOSE (271) 12 54
PARA_OPEN (272) 14 15 16 17 32 33 34 35 55 60 61
PARA_CLOSE (273) 14 15 16 17 32 33 34 35 55 60 61
ID (274) 12 13 14 15 16 17 54 59 60 61
NUM (275) 12 58
ASSIGN (276) 36
LOGICAL_OR (277) 37
LOGICAL_AND (278) 38
EQ (279) 40
NE (280) 41
LS (281) 42
LSEQ (282) 43
GTEQ (283) 44
GT (284) 45
SHIFT_LEFT (285) 48
SHIFT_RIGHT (286) 49
PLUS (287) 46 53
MINUS (288) 47 52
MUL (289) 50
DIV (290) 51
MOD (291)
LOGICAL_NOT (292) 39
UNARY_MINUS (293)
UNARY_PLUS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
program_element_list (42)
    on left: 2 3, on right: 1 2
program_element (43)
    on left: 4 5 6 7, on right: 2 3
type (44)
    on left: 8 9, on right: 11 14 15 16 17 20
variable_declaration (45)
    on left: 10 11, on right: 4 10 24
identifier_declaration (46)
    on left: 12 13, on right: 10 11 20
function_definition (47)
    on left: 14 15, on right: 6
function_declaration (48)
    on left: 16 17, on right: 5
function_parameter_list (49)
    on left: 18 19, on right: 15 17 19
function_parameter (50)
    on left: 20, on right: 18 19
stmt_list (51)
    on left: 21 22, on right: 14 15 22 31
stmt (52)
    on left: 23 24 25 26 27 28 29 30, on right: 22 32 33 34 35
stmt_block (53)
    on left: 31, on right: 23
stmt_conditional (54)
    on left: 32 33, on right: 26
stmt_loop (55)
    on left: 34 35, on right: 27
expression (56)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57, on right: 25 28 32 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 55 62 63
primary (57)
    on left: 58 59, on right: 54 57
function_call (58)
    on left: 60 61, on right: 56
function_call_parameters (59)
    on left: 62 63, on right: 61 62


state 0

    0 $accept: . program $end
    1 program: . program_element_list
    2 program_element_list: . program_element_list program_element
    3                     | . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   17                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    program               go to state 4
    program_element_list  go to state 5
    program_element       go to state 6
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 1

    8 type: INT .

    $default  reduce using rule 8 (type)


state 2

    9 type: VOID .

    $default  reduce using rule 9 (type)


state 3

    7 program_element: SEMICOLON .

    $default  reduce using rule 7 (program_element)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 11


state 5

    1 program: program_element_list .  [$end]
    2 program_element_list: program_element_list . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   17                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    $default  reduce using rule 1 (program)

    program_element       go to state 12
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 6

    3 program_element_list: program_element .

    $default  reduce using rule 3 (program_element_list)


state 7

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   14 function_definition: type . ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type . ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type . ID PARA_OPEN PARA_CLOSE
   17                     | type . ID PARA_OPEN function_parameter_list PARA_CLOSE

    ID  shift, and go to state 13

    identifier_declaration  go to state 14


state 8

    4 program_element: variable_declaration . SEMICOLON
   10 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 16


state 9

    6 program_element: function_definition .

    $default  reduce using rule 6 (program_element)


state 10

    5 program_element: function_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 11

    0 $accept: program $end .

    $default  accept


state 12

    2 program_element_list: program_element_list program_element .

    $default  reduce using rule 2 (program_element_list)


state 13

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON]
   14 function_definition: type ID . PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID . PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID . PARA_OPEN PARA_CLOSE
   17                     | type ID . PARA_OPEN function_parameter_list PARA_CLOSE

    BRACKET_OPEN  shift, and go to state 18
    PARA_OPEN     shift, and go to state 19

    $default  reduce using rule 13 (identifier_declaration)


state 14

   11 variable_declaration: type identifier_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 15

   10 variable_declaration: variable_declaration COMMA . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 21


state 16

    4 program_element: variable_declaration SEMICOLON .

    $default  reduce using rule 4 (program_element)


state 17

    5 program_element: function_declaration SEMICOLON .

    $default  reduce using rule 5 (program_element)


state 18

   12 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  shift, and go to state 22


state 19

    8 type: . INT
    9     | . VOID
   14 function_definition: type ID PARA_OPEN . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID PARA_OPEN . function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID PARA_OPEN . PARA_CLOSE
   17                     | type ID PARA_OPEN . function_parameter_list PARA_CLOSE
   18 function_parameter_list: . function_parameter
   19                        | . function_parameter_list COMMA function_parameter
   20 function_parameter: . type identifier_declaration

    INT         shift, and go to state 1
    VOID        shift, and go to state 2
    PARA_CLOSE  shift, and go to state 23

    type                     go to state 24
    function_parameter_list  go to state 25
    function_parameter       go to state 26


state 20

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  shift, and go to state 18

    $default  reduce using rule 13 (identifier_declaration)


state 21

   10 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduce using rule 10 (variable_declaration)


state 22

   12 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 27


state 23

   14 function_definition: type ID PARA_OPEN PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID PARA_OPEN PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 28

    $default  reduce using rule 16 (function_declaration)


state 24

   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   20 function_parameter: type . identifier_declaration

    ID  shift, and go to state 20

    identifier_declaration  go to state 29


state 25

   15 function_definition: type ID PARA_OPEN function_parameter_list . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: type ID PARA_OPEN function_parameter_list . PARA_CLOSE
   19 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       shift, and go to state 30
    PARA_CLOSE  shift, and go to state 31


state 26

   18 function_parameter_list: function_parameter .

    $default  reduce using rule 18 (function_parameter_list)


state 27

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduce using rule 12 (identifier_declaration)


state 28

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   21 stmt_list: .
   22          | . stmt_list stmt

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 32


state 29

   20 function_parameter: type identifier_declaration .

    $default  reduce using rule 20 (function_parameter)


state 30

    8 type: . INT
    9     | . VOID
   19 function_parameter_list: function_parameter_list COMMA . function_parameter
   20 function_parameter: . type identifier_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type                go to state 24
    function_parameter  go to state 33


state 31

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: type ID PARA_OPEN function_parameter_list PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 34

    $default  reduce using rule 17 (function_declaration)


state 32

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 41
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 50
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 33

   19 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduce using rule 19 (function_parameter_list)


state 34

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   21 stmt_list: .
   22          | . stmt_list stmt

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 57


state 35

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   35          | DO . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 58
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 36

   34 stmt_loop: WHILE . PARA_OPEN expression PARA_CLOSE stmt

    PARA_OPEN  shift, and go to state 59


state 37

   32 stmt_conditional: IF . PARA_OPEN expression PARA_CLOSE stmt
   33                 | IF . PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

    PARA_OPEN  shift, and go to state 60


state 38

   28 stmt: RETURN . expression SEMICOLON
   29     | RETURN . SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    shift, and go to state 61
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 62
    primary        go to state 55
    function_call  go to state 56


state 39

   30 stmt: SEMICOLON .

    $default  reduce using rule 30 (stmt)


state 40

   21 stmt_list: .
   22          | . stmt_list stmt
   31 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 63


state 41

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 14 (function_definition)


state 42

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   55           | PARA_OPEN . expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 64
    primary        go to state 55
    function_call  go to state 56


state 43

   54 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   59 primary: ID .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   60 function_call: ID . PARA_OPEN PARA_CLOSE
   61              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    BRACKET_OPEN  shift, and go to state 65
    PARA_OPEN     shift, and go to state 66

    $default  reduce using rule 59 (primary)


state 44

   58 primary: NUM .

    $default  reduce using rule 58 (primary)


state 45

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   53           | PLUS . expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 67
    primary        go to state 55
    function_call  go to state 56


state 46

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   52           | MINUS . expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 68
    primary        go to state 55
    function_call  go to state 56


state 47

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   39           | LOGICAL_NOT . expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 69
    primary        go to state 55
    function_call  go to state 56


state 48

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 14


state 49

   10 variable_declaration: variable_declaration . COMMA identifier_declaration
   24 stmt: variable_declaration . SEMICOLON

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 70


state 50

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


state 51

   23 stmt: stmt_block .

    $default  reduce using rule 23 (stmt)


state 52

   26 stmt: stmt_conditional .

    $default  reduce using rule 26 (stmt)


state 53

   27 stmt: stmt_loop .

    $default  reduce using rule 27 (stmt)


state 54

   25 stmt: expression . SEMICOLON
   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SEMICOLON    shift, and go to state 71
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 55

   57 expression: primary .

    $default  reduce using rule 57 (expression)


state 56

   56 expression: function_call .

    $default  reduce using rule 56 (expression)


state 57

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 87
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 50
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 58

   35 stmt_loop: DO stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  shift, and go to state 88


state 59

   34 stmt_loop: WHILE PARA_OPEN . expression PARA_CLOSE stmt
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 89
    primary        go to state 55
    function_call  go to state 56


state 60

   32 stmt_conditional: IF PARA_OPEN . expression PARA_CLOSE stmt
   33                 | IF PARA_OPEN . expression PARA_CLOSE stmt ELSE stmt
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 90
    primary        go to state 55
    function_call  go to state 56


state 61

   29 stmt: RETURN SEMICOLON .

    $default  reduce using rule 29 (stmt)


state 62

   28 stmt: RETURN expression . SEMICOLON
   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SEMICOLON    shift, and go to state 91
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 63

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   31           | BRACE_OPEN stmt_list . BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 92
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 50
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 64

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   55           | PARA_OPEN expression . PARA_CLOSE

    PARA_CLOSE   shift, and go to state 93
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 65

   54 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   58 primary: . NUM
   59        | . ID

    ID   shift, and go to state 94
    NUM  shift, and go to state 44

    primary  go to state 95


state 66

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   60              | ID PARA_OPEN . PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   61              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   62 function_call_parameters: . function_call_parameters COMMA expression
   63                         | . expression

    PARA_OPEN    shift, and go to state 42
    PARA_CLOSE   shift, and go to state 96
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression                go to state 97
    primary                   go to state 55
    function_call             go to state 56
    function_call_parameters  go to state 98


state 67

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   53           | PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < UNARY_PLUS).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_PLUS).
    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_PLUS).
    Conflict between rule 53 and token EQ resolved as reduce (EQ < UNARY_PLUS).
    Conflict between rule 53 and token NE resolved as reduce (NE < UNARY_PLUS).
    Conflict between rule 53 and token LS resolved as reduce (LS < UNARY_PLUS).
    Conflict between rule 53 and token LSEQ resolved as reduce (LSEQ < UNARY_PLUS).
    Conflict between rule 53 and token GTEQ resolved as reduce (GTEQ < UNARY_PLUS).
    Conflict between rule 53 and token GT resolved as reduce (GT < UNARY_PLUS).
    Conflict between rule 53 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_PLUS).
    Conflict between rule 53 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_PLUS).
    Conflict between rule 53 and token PLUS resolved as reduce (PLUS < UNARY_PLUS).
    Conflict between rule 53 and token MINUS resolved as reduce (MINUS < UNARY_PLUS).
    Conflict between rule 53 and token MUL resolved as reduce (MUL < UNARY_PLUS).
    Conflict between rule 53 and token DIV resolved as reduce (DIV < UNARY_PLUS).


state 68

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   52           | MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < UNARY_MINUS).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_MINUS).
    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_MINUS).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < UNARY_MINUS).
    Conflict between rule 52 and token NE resolved as reduce (NE < UNARY_MINUS).
    Conflict between rule 52 and token LS resolved as reduce (LS < UNARY_MINUS).
    Conflict between rule 52 and token LSEQ resolved as reduce (LSEQ < UNARY_MINUS).
    Conflict between rule 52 and token GTEQ resolved as reduce (GTEQ < UNARY_MINUS).
    Conflict between rule 52 and token GT resolved as reduce (GT < UNARY_MINUS).
    Conflict between rule 52 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_MINUS).
    Conflict between rule 52 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_MINUS).
    Conflict between rule 52 and token PLUS resolved as reduce (PLUS < UNARY_MINUS).
    Conflict between rule 52 and token MINUS resolved as reduce (MINUS < UNARY_MINUS).
    Conflict between rule 52 and token MUL resolved as reduce (MUL < UNARY_MINUS).
    Conflict between rule 52 and token DIV resolved as reduce (DIV < UNARY_MINUS).


state 69

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   39           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_NOT).
    Conflict between rule 39 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_NOT).
    Conflict between rule 39 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LOGICAL_NOT).
    Conflict between rule 39 and token EQ resolved as reduce (EQ < LOGICAL_NOT).
    Conflict between rule 39 and token NE resolved as reduce (NE < LOGICAL_NOT).
    Conflict between rule 39 and token LS resolved as reduce (LS < LOGICAL_NOT).
    Conflict between rule 39 and token LSEQ resolved as reduce (LSEQ < LOGICAL_NOT).
    Conflict between rule 39 and token GTEQ resolved as reduce (GTEQ < LOGICAL_NOT).
    Conflict between rule 39 and token GT resolved as reduce (GT < LOGICAL_NOT).
    Conflict between rule 39 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < LOGICAL_NOT).
    Conflict between rule 39 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < LOGICAL_NOT).
    Conflict between rule 39 and token PLUS resolved as reduce (PLUS < LOGICAL_NOT).
    Conflict between rule 39 and token MINUS resolved as reduce (MINUS < LOGICAL_NOT).
    Conflict between rule 39 and token MUL resolved as reduce (MUL < LOGICAL_NOT).
    Conflict between rule 39 and token DIV resolved as reduce (DIV < LOGICAL_NOT).


state 70

   24 stmt: variable_declaration SEMICOLON .

    $default  reduce using rule 24 (stmt)


state 71

   25 stmt: expression SEMICOLON .

    $default  reduce using rule 25 (stmt)


state 72

   36 expression: . expression ASSIGN expression
   36           | expression ASSIGN . expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 99
    primary        go to state 55
    function_call  go to state 56


state 73

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   37           | expression LOGICAL_OR . expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 100
    primary        go to state 55
    function_call  go to state 56


state 74

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   38           | expression LOGICAL_AND . expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 101
    primary        go to state 55
    function_call  go to state 56


state 75

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   40           | expression EQ . expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 102
    primary        go to state 55
    function_call  go to state 56


state 76

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   41           | expression NE . expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 103
    primary        go to state 55
    function_call  go to state 56


state 77

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   42           | expression LS . expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 104
    primary        go to state 55
    function_call  go to state 56


state 78

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   43           | expression LSEQ . expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 105
    primary        go to state 55
    function_call  go to state 56


state 79

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   44           | expression GTEQ . expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 106
    primary        go to state 55
    function_call  go to state 56


state 80

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   45           | expression GT . expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 107
    primary        go to state 55
    function_call  go to state 56


state 81

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   48           | expression SHIFT_LEFT . expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 108
    primary        go to state 55
    function_call  go to state 56


state 82

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   49           | expression SHIFT_RIGHT . expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 109
    primary        go to state 55
    function_call  go to state 56


state 83

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   46           | expression PLUS . expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 110
    primary        go to state 55
    function_call  go to state 56


state 84

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   47           | expression MINUS . expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 111
    primary        go to state 55
    function_call  go to state 56


state 85

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   50           | expression MUL . expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 112
    primary        go to state 55
    function_call  go to state 56


state 86

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   51           | expression DIV . expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 113
    primary        go to state 55
    function_call  go to state 56


state 87

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 15 (function_definition)


state 88

   35 stmt_loop: DO stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  shift, and go to state 114


state 89

   34 stmt_loop: WHILE PARA_OPEN expression . PARA_CLOSE stmt
   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 115
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 90

   32 stmt_conditional: IF PARA_OPEN expression . PARA_CLOSE stmt
   33                 | IF PARA_OPEN expression . PARA_CLOSE stmt ELSE stmt
   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 116
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 91

   28 stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 28 (stmt)


state 92

   31 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 31 (stmt_block)


state 93

   55 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduce using rule 55 (expression)


state 94

   59 primary: ID .

    $default  reduce using rule 59 (primary)


state 95

   54 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 117


state 96

   60 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduce using rule 60 (function_call)


state 97

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   63 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 63 (function_call_parameters)


state 98

   61 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   62 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       shift, and go to state 118
    PARA_CLOSE  shift, and go to state 119


state 99

   36 expression: expression . ASSIGN expression
   36           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 36 and token LOGICAL_OR resolved as shift (ASSIGN < LOGICAL_OR).
    Conflict between rule 36 and token LOGICAL_AND resolved as shift (ASSIGN < LOGICAL_AND).
    Conflict between rule 36 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 36 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 36 and token LS resolved as shift (ASSIGN < LS).
    Conflict between rule 36 and token LSEQ resolved as shift (ASSIGN < LSEQ).
    Conflict between rule 36 and token GTEQ resolved as shift (ASSIGN < GTEQ).
    Conflict between rule 36 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 36 and token SHIFT_LEFT resolved as shift (ASSIGN < SHIFT_LEFT).
    Conflict between rule 36 and token SHIFT_RIGHT resolved as shift (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 36 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 36 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 36 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 36 and token DIV resolved as shift (ASSIGN < DIV).


state 100

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   37           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR]
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_OR).
    Conflict between rule 37 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 37 and token LOGICAL_AND resolved as shift (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 37 and token EQ resolved as shift (LOGICAL_OR < EQ).
    Conflict between rule 37 and token NE resolved as shift (LOGICAL_OR < NE).
    Conflict between rule 37 and token LS resolved as shift (LOGICAL_OR < LS).
    Conflict between rule 37 and token LSEQ resolved as shift (LOGICAL_OR < LSEQ).
    Conflict between rule 37 and token GTEQ resolved as shift (LOGICAL_OR < GTEQ).
    Conflict between rule 37 and token GT resolved as shift (LOGICAL_OR < GT).
    Conflict between rule 37 and token SHIFT_LEFT resolved as shift (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 37 and token SHIFT_RIGHT resolved as shift (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 37 and token PLUS resolved as shift (LOGICAL_OR < PLUS).
    Conflict between rule 37 and token MINUS resolved as shift (LOGICAL_OR < MINUS).
    Conflict between rule 37 and token MUL resolved as shift (LOGICAL_OR < MUL).
    Conflict between rule 37 and token DIV resolved as shift (LOGICAL_OR < DIV).


state 101

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   38           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND]
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_AND).
    Conflict between rule 38 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 38 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 38 and token EQ resolved as shift (LOGICAL_AND < EQ).
    Conflict between rule 38 and token NE resolved as shift (LOGICAL_AND < NE).
    Conflict between rule 38 and token LS resolved as shift (LOGICAL_AND < LS).
    Conflict between rule 38 and token LSEQ resolved as shift (LOGICAL_AND < LSEQ).
    Conflict between rule 38 and token GTEQ resolved as shift (LOGICAL_AND < GTEQ).
    Conflict between rule 38 and token GT resolved as shift (LOGICAL_AND < GT).
    Conflict between rule 38 and token SHIFT_LEFT resolved as shift (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 38 and token SHIFT_RIGHT resolved as shift (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 38 and token PLUS resolved as shift (LOGICAL_AND < PLUS).
    Conflict between rule 38 and token MINUS resolved as shift (LOGICAL_AND < MINUS).
    Conflict between rule 38 and token MUL resolved as shift (LOGICAL_AND < MUL).
    Conflict between rule 38 and token DIV resolved as shift (LOGICAL_AND < DIV).


state 102

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   40           | expression EQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 40 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < EQ).
    Conflict between rule 40 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < EQ).
    Conflict between rule 40 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 40 and token NE resolved as reduce (%left NE).
    Conflict between rule 40 and token LS resolved as shift (EQ < LS).
    Conflict between rule 40 and token LSEQ resolved as shift (EQ < LSEQ).
    Conflict between rule 40 and token GTEQ resolved as shift (EQ < GTEQ).
    Conflict between rule 40 and token GT resolved as shift (EQ < GT).
    Conflict between rule 40 and token SHIFT_LEFT resolved as shift (EQ < SHIFT_LEFT).
    Conflict between rule 40 and token SHIFT_RIGHT resolved as shift (EQ < SHIFT_RIGHT).
    Conflict between rule 40 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 40 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 40 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 40 and token DIV resolved as shift (EQ < DIV).


state 103

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   41           | expression NE expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 41 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < NE).
    Conflict between rule 41 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < NE).
    Conflict between rule 41 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 41 and token NE resolved as reduce (%left NE).
    Conflict between rule 41 and token LS resolved as shift (NE < LS).
    Conflict between rule 41 and token LSEQ resolved as shift (NE < LSEQ).
    Conflict between rule 41 and token GTEQ resolved as shift (NE < GTEQ).
    Conflict between rule 41 and token GT resolved as shift (NE < GT).
    Conflict between rule 41 and token SHIFT_LEFT resolved as shift (NE < SHIFT_LEFT).
    Conflict between rule 41 and token SHIFT_RIGHT resolved as shift (NE < SHIFT_RIGHT).
    Conflict between rule 41 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 41 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 41 and token DIV resolved as shift (NE < DIV).


state 104

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   42           | expression LS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token ASSIGN resolved as reduce (ASSIGN < LS).
    Conflict between rule 42 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LS).
    Conflict between rule 42 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LS).
    Conflict between rule 42 and token EQ resolved as reduce (EQ < LS).
    Conflict between rule 42 and token NE resolved as reduce (NE < LS).
    Conflict between rule 42 and token LS resolved as reduce (%left LS).
    Conflict between rule 42 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 42 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 42 and token GT resolved as reduce (%left GT).
    Conflict between rule 42 and token SHIFT_LEFT resolved as shift (LS < SHIFT_LEFT).
    Conflict between rule 42 and token SHIFT_RIGHT resolved as shift (LS < SHIFT_RIGHT).
    Conflict between rule 42 and token PLUS resolved as shift (LS < PLUS).
    Conflict between rule 42 and token MINUS resolved as shift (LS < MINUS).
    Conflict between rule 42 and token MUL resolved as shift (LS < MUL).
    Conflict between rule 42 and token DIV resolved as shift (LS < DIV).


state 105

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   43           | expression LSEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token ASSIGN resolved as reduce (ASSIGN < LSEQ).
    Conflict between rule 43 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LSEQ).
    Conflict between rule 43 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LSEQ).
    Conflict between rule 43 and token EQ resolved as reduce (EQ < LSEQ).
    Conflict between rule 43 and token NE resolved as reduce (NE < LSEQ).
    Conflict between rule 43 and token LS resolved as reduce (%left LS).
    Conflict between rule 43 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 43 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 43 and token GT resolved as reduce (%left GT).
    Conflict between rule 43 and token SHIFT_LEFT resolved as shift (LSEQ < SHIFT_LEFT).
    Conflict between rule 43 and token SHIFT_RIGHT resolved as shift (LSEQ < SHIFT_RIGHT).
    Conflict between rule 43 and token PLUS resolved as shift (LSEQ < PLUS).
    Conflict between rule 43 and token MINUS resolved as shift (LSEQ < MINUS).
    Conflict between rule 43 and token MUL resolved as shift (LSEQ < MUL).
    Conflict between rule 43 and token DIV resolved as shift (LSEQ < DIV).


state 106

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   44           | expression GTEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < GTEQ).
    Conflict between rule 44 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GTEQ).
    Conflict between rule 44 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GTEQ).
    Conflict between rule 44 and token EQ resolved as reduce (EQ < GTEQ).
    Conflict between rule 44 and token NE resolved as reduce (NE < GTEQ).
    Conflict between rule 44 and token LS resolved as reduce (%left LS).
    Conflict between rule 44 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 44 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 44 and token GT resolved as reduce (%left GT).
    Conflict between rule 44 and token SHIFT_LEFT resolved as shift (GTEQ < SHIFT_LEFT).
    Conflict between rule 44 and token SHIFT_RIGHT resolved as shift (GTEQ < SHIFT_RIGHT).
    Conflict between rule 44 and token PLUS resolved as shift (GTEQ < PLUS).
    Conflict between rule 44 and token MINUS resolved as shift (GTEQ < MINUS).
    Conflict between rule 44 and token MUL resolved as shift (GTEQ < MUL).
    Conflict between rule 44 and token DIV resolved as shift (GTEQ < DIV).


state 107

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   45           | expression GT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 45 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GT).
    Conflict between rule 45 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GT).
    Conflict between rule 45 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 45 and token NE resolved as reduce (NE < GT).
    Conflict between rule 45 and token LS resolved as reduce (%left LS).
    Conflict between rule 45 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 45 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 45 and token GT resolved as reduce (%left GT).
    Conflict between rule 45 and token SHIFT_LEFT resolved as shift (GT < SHIFT_LEFT).
    Conflict between rule 45 and token SHIFT_RIGHT resolved as shift (GT < SHIFT_RIGHT).
    Conflict between rule 45 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 45 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 45 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 45 and token DIV resolved as shift (GT < DIV).


state 108

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   48           | expression SHIFT_LEFT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    MUL    shift, and go to state 85
    DIV    shift, and go to state 86

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_LEFT).
    Conflict between rule 48 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 48 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < SHIFT_LEFT).
    Conflict between rule 48 and token NE resolved as reduce (NE < SHIFT_LEFT).
    Conflict between rule 48 and token LS resolved as reduce (LS < SHIFT_LEFT).
    Conflict between rule 48 and token LSEQ resolved as reduce (LSEQ < SHIFT_LEFT).
    Conflict between rule 48 and token GTEQ resolved as reduce (GTEQ < SHIFT_LEFT).
    Conflict between rule 48 and token GT resolved as reduce (GT < SHIFT_LEFT).
    Conflict between rule 48 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 48 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 48 and token PLUS resolved as shift (SHIFT_LEFT < PLUS).
    Conflict between rule 48 and token MINUS resolved as shift (SHIFT_LEFT < MINUS).
    Conflict between rule 48 and token MUL resolved as shift (SHIFT_LEFT < MUL).
    Conflict between rule 48 and token DIV resolved as shift (SHIFT_LEFT < DIV).


state 109

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   49           | expression SHIFT_RIGHT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   50           | expression . MUL expression
   51           | expression . DIV expression

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    MUL    shift, and go to state 85
    DIV    shift, and go to state 86

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 49 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 49 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 49 and token EQ resolved as reduce (EQ < SHIFT_RIGHT).
    Conflict between rule 49 and token NE resolved as reduce (NE < SHIFT_RIGHT).
    Conflict between rule 49 and token LS resolved as reduce (LS < SHIFT_RIGHT).
    Conflict between rule 49 and token LSEQ resolved as reduce (LSEQ < SHIFT_RIGHT).
    Conflict between rule 49 and token GTEQ resolved as reduce (GTEQ < SHIFT_RIGHT).
    Conflict between rule 49 and token GT resolved as reduce (GT < SHIFT_RIGHT).
    Conflict between rule 49 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 49 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 49 and token PLUS resolved as shift (SHIFT_RIGHT < PLUS).
    Conflict between rule 49 and token MINUS resolved as shift (SHIFT_RIGHT < MINUS).
    Conflict between rule 49 and token MUL resolved as shift (SHIFT_RIGHT < MUL).
    Conflict between rule 49 and token DIV resolved as shift (SHIFT_RIGHT < DIV).


state 110

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   46           | expression PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 46 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < PLUS).
    Conflict between rule 46 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < PLUS).
    Conflict between rule 46 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 46 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 46 and token LS resolved as reduce (LS < PLUS).
    Conflict between rule 46 and token LSEQ resolved as reduce (LSEQ < PLUS).
    Conflict between rule 46 and token GTEQ resolved as reduce (GTEQ < PLUS).
    Conflict between rule 46 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 46 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < PLUS).
    Conflict between rule 46 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < PLUS).
    Conflict between rule 46 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 46 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 46 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 46 and token DIV resolved as shift (PLUS < DIV).


state 111

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   47           | expression MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    MUL  shift, and go to state 85
    DIV  shift, and go to state 86

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 47 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MINUS).
    Conflict between rule 47 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MINUS).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 47 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 47 and token LS resolved as reduce (LS < MINUS).
    Conflict between rule 47 and token LSEQ resolved as reduce (LSEQ < MINUS).
    Conflict between rule 47 and token GTEQ resolved as reduce (GTEQ < MINUS).
    Conflict between rule 47 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 47 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MINUS).
    Conflict between rule 47 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MINUS).
    Conflict between rule 47 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 47 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 47 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 47 and token DIV resolved as shift (MINUS < DIV).


state 112

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   50           | expression MUL expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   51           | expression . DIV expression

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 50 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 50 and token LS resolved as reduce (LS < MUL).
    Conflict between rule 50 and token LSEQ resolved as reduce (LSEQ < MUL).
    Conflict between rule 50 and token GTEQ resolved as reduce (GTEQ < MUL).
    Conflict between rule 50 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 50 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MUL).
    Conflict between rule 50 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MUL).
    Conflict between rule 50 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 50 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 50 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 50 and token DIV resolved as reduce (%left DIV).


state 113

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   51           | expression DIV expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < DIV).
    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < DIV).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 51 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 51 and token LS resolved as reduce (LS < DIV).
    Conflict between rule 51 and token LSEQ resolved as reduce (LSEQ < DIV).
    Conflict between rule 51 and token GTEQ resolved as reduce (GTEQ < DIV).
    Conflict between rule 51 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 51 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < DIV).
    Conflict between rule 51 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < DIV).
    Conflict between rule 51 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 51 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 51 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 51 and token DIV resolved as reduce (%left DIV).


state 114

   35 stmt_loop: DO stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 120
    primary        go to state 55
    function_call  go to state 56


state 115

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   34          | WHILE PARA_OPEN expression PARA_CLOSE . stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 121
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 116

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   32                 | IF PARA_OPEN expression PARA_CLOSE . stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   33                 | IF PARA_OPEN expression PARA_CLOSE . stmt ELSE stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 122
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 117

   54 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduce using rule 54 (expression)


state 118

   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   62 function_call_parameters: function_call_parameters COMMA . expression

    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expression     go to state 123
    primary        go to state 55
    function_call  go to state 56


state 119

   61 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduce using rule 61 (function_call)


state 120

   35 stmt_loop: DO stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 124
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86


state 121

   34 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt .

    $default  reduce using rule 34 (stmt_loop)


state 122

   32 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, PARA_OPEN, ID, NUM, PLUS, MINUS, LOGICAL_NOT]
   33                 | IF PARA_OPEN expression PARA_CLOSE stmt . ELSE stmt

    ELSE  shift, and go to state 125

    ELSE      [reduce using rule 32 (stmt_conditional)]
    $default  reduce using rule 32 (stmt_conditional)


state 123

   36 expression: expression . ASSIGN expression
   37           | expression . LOGICAL_OR expression
   38           | expression . LOGICAL_AND expression
   40           | expression . EQ expression
   41           | expression . NE expression
   42           | expression . LS expression
   43           | expression . LSEQ expression
   44           | expression . GTEQ expression
   45           | expression . GT expression
   46           | expression . PLUS expression
   47           | expression . MINUS expression
   48           | expression . SHIFT_LEFT expression
   49           | expression . SHIFT_RIGHT expression
   50           | expression . MUL expression
   51           | expression . DIV expression
   62 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    EQ           shift, and go to state 75
    NE           shift, and go to state 76
    LS           shift, and go to state 77
    LSEQ         shift, and go to state 78
    GTEQ         shift, and go to state 79
    GT           shift, and go to state 80
    SHIFT_LEFT   shift, and go to state 81
    SHIFT_RIGHT  shift, and go to state 82
    PLUS         shift, and go to state 83
    MINUS        shift, and go to state 84
    MUL          shift, and go to state 85
    DIV          shift, and go to state 86

    $default  reduce using rule 62 (function_call_parameters)


state 124

   35 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 125

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   32 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   33                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   33                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE . stmt
   34 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   35          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   36 expression: . expression ASSIGN expression
   37           | . expression LOGICAL_OR expression
   38           | . expression LOGICAL_AND expression
   39           | . LOGICAL_NOT expression
   40           | . expression EQ expression
   41           | . expression NE expression
   42           | . expression LS expression
   43           | . expression LSEQ expression
   44           | . expression GTEQ expression
   45           | . expression GT expression
   46           | . expression PLUS expression
   47           | . expression MINUS expression
   48           | . expression SHIFT_LEFT expression
   49           | . expression SHIFT_RIGHT expression
   50           | . expression MUL expression
   51           | . expression DIV expression
   52           | . MINUS expression
   53           | . PLUS expression
   54           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   55           | . PARA_OPEN expression PARA_CLOSE
   56           | . function_call
   57           | . primary
   58 primary: . NUM
   59        | . ID
   60 function_call: . ID PARA_OPEN PARA_CLOSE
   61              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    PARA_OPEN    shift, and go to state 42
    ID           shift, and go to state 43
    NUM          shift, and go to state 44
    PLUS         shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    type                  go to state 48
    variable_declaration  go to state 49
    stmt                  go to state 127
    stmt_block            go to state 51
    stmt_conditional      go to state 52
    stmt_loop             go to state 53
    expression            go to state 54
    primary               go to state 55
    function_call         go to state 56


state 126

   35 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduce using rule 35 (stmt_loop)


state 127

   33 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt .

    $default  reduce using rule 33 (stmt_conditional)
